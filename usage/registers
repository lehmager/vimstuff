== Overview ==

=== Naming ===

 a-z           lowercase letters a to z
 0-9           decimal digits 0 to 9
 *+~.%#:-"=_/  special characters

=== Named registers a to z ===

 Used with Vim yank, delte and put commands. Vim fills these registers only when you say so.  Specify them as lowercase
 letters to replace their previous contents or as uppercase letters to append to their previous contents.

==== Samples ====

 "eY
 Yank(copy) current line to register e .
 "EY
 Append current line to register e .
 "eP
 Put contents of register e before current line.
 "ep
 Put contents of register e after current line.

=== Numbered registers 0 to 9 ===

 Vim fills these registers with text from yank and delete commands.


=== Special registers ===

 * - Contents of the system clipboard.
 : - Contains the most recent executed command-line; read-only register.
 . - Contains the last inserted text; read-only register.
 % - Contains the name of the current file; read-only register.
 # - Contains the name of the alternate file; read-only register.
 " - Unnamend register; Vim fills this register with text deleted with the "d", "c", "s", "x" commands or copied with the
     yank "y" command.
 - - Small delete register; this register contains text from commands that delete less than one line,
 = - Expression register.
 _ - Black hole register.
 / - Contains the most recent search-pattern.



=== The yank register ===

 Numbered register 0 contains the text from the most recent yank command, That is why it is also called the yank register.
 The contents of the yank register may always be retrieved by "0p .



=== Selection and drop registers ===
 (Add this paragraph!)


== Related Vim commands ==
 d, dd, D, x   Delete commands.
 c, s          Change and substitute commands.
 p, P          Put commands.
 q             Command recording to a register.
 y, yy, Y      Yank commands.


== Related ex commands ==

 :reg[isters] {arg}	Display the contents of the numbered and named registers.
    samples
       :reg      Display all registers.
       :reg ab   Display registers a and b.
       :reg 1-3  Display registers 1 to 3.

 :[line]put [x]   Put the text [from register x] after [line] (default current line).This always works linewise.
 
    sample
       V3j"eY:66put e
       Where V3j"eY copies three lines to register e starting from current line.
       The ex command :66put e inserts the three lines from register e after line 66 .

 :[range]y[ank] [x]      Yank [range] lines [into register x] .

== Recording to a register and @-functions ==
=== Recording to a register === 

 qx   Record typed characters into register x, where x is from {0-9a-zA-Z"} , use uppercase to append).
 q    Stops recording.

=== @-functions ===

 @x         Execute the contents(commands) of register x, where x is from {a-z".=*} .
 @:         Repeats the last command-line because register : contains the most recent executed command-line.
:[addr]@x   Execute the contents of register x at line [addr] as an ex command where x is from  {0-9a-z".=*} .
  
==== Sample ====
 Define @-function swapping current line for next line.
       
 First solution
    While in normal mode type in current line "qaddpq" (without the enclosing double quotes)
    This records the string ddp to register a. You may verify this fact by entering :reg a
   
 Second solution
    Write the string ddp to a separate line. Position cursor to begin of line and enter the string "byw
    thus mapping the string ddp to register b .
      
 Third solution
    Write the string ddp to a separate line. Now mark this string in visual mode and yank to register c
    entering "cy while in visul mode.
   
 Now entering @a or @b or @c in normal mode will swap lines.

=== Repeating @-functions ===

 @@          Repeat the previous @x where x is from {0-9a-z":*} .
 :[addr]@@   Repeat the previous :@x where x is from {0-9a-z"} .


== Miscellaneous Links ==

http://vimdoc.sourceforge.net/htmldoc/change.html#registers

http://vimdoc.sourceforge.net/htmldoc/gui_w32.html#gui-clipboard

http://vimdoc.sourceforge.net/htmldoc/gui.html#clipboard

http://usevim.com/2012/04/13/registers/

http://vimcasts.org/episodes/accessing-the-system-clipboard-from-vim/

http://vimcasts.org/episodes/meet-the-yank-register/

http://vimcasts.org/episodes/using-vims-named-registers/

http://stackoverflow.com/questions/11489428/how-to-make-vim-paste-from-and-copy-to-systems-clipboard

